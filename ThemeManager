 
local ThemeManager = {} do
	ThemeManager.Folder = 'LinoriaLibSettings'
	if not isfolder(ThemeManager.Folder) then makefolder(ThemeManager.Folder) end

	ThemeManager.Library = nil
	

local httpService = game:GetService("HttpService")

ThemeManager.BuiltInThemes = {
    ['Default'] = { 
        1, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2e3440","AccentColor":"88c0d0","BackgroundColor":"3b4252","OutlineColor":"4c566a"}') 
    },
    ['Blaze'] = { 
        2, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"5d0000","AccentColor":"850000","BackgroundColor":"540000","OutlineColor":"7a2424"}') 
    },
    ['BBot'] = { 
        3, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1e1e1e","AccentColor":"7e48a3","BackgroundColor":"232323","OutlineColor":"141414"}') 
    },
    ['Eternal'] = { 
        4, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3c523f","AccentColor":"558676","BackgroundColor":"394f45","OutlineColor":"247a30"}') 
    },
    ['Fatality'] = { 
        5, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1e1842","AccentColor":"c50754","BackgroundColor":"191335","OutlineColor":"3c355d"}') 
    },
    ['Jester'] = { 
        6, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"242424","AccentColor":"db4467","BackgroundColor":"1c1c1c","OutlineColor":"373737"}') 
    },
    ['Mint'] = { 
        7, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"242424","AccentColor":"3db488","BackgroundColor":"1c1c1c","OutlineColor":"373737"}') 
    },
    ['Tokyo Night'] = { 
        8, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"191925","AccentColor":"6759b3","BackgroundColor":"16161f","OutlineColor":"323232"}') 
    },
    ['Ubuntu'] = { 
        9, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3e3e3e","AccentColor":"e2581e","BackgroundColor":"323232","OutlineColor":"191919"}') 
    },
    ['Quartz'] = { 
        10, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"232330","AccentColor":"426e87","BackgroundColor":"1d1b26","OutlineColor":"27232f"}') 
    },
    ['Solarized Dark'] = { 
        11, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"002b36","AccentColor":"268bd2","BackgroundColor":"073642","OutlineColor":"586e75"}') 
    },
    ['Monokai'] = { 
        12, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"272822","AccentColor":"f92672","BackgroundColor":"1e1f1c","OutlineColor":"49483e"}') 
    },
    ['Dracula'] = { 
        13, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"282a36","AccentColor":"ff79c6","BackgroundColor":"44475a","OutlineColor":"6272a4"}') 
    },
    ['Random'] = { 
        14, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"299a54","AccentColor":"39c5d0","BackgroundColor":"3r4254","OutlineColor":"4c566a"}') 
    },
    ['Oceanic'] = { 
        15, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1b2b34","AccentColor":"6699cc","BackgroundColor":"263238","OutlineColor":"343d46"}') 
    },
    ['Neon Night'] = { 
        16, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"141414","AccentColor":"e800e8","BackgroundColor":"1c1c1c","OutlineColor":"3a003a"}') 
    },
    ['Pastel'] = { 
        17, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ffc8dd","AccentColor":"ffafcc","BackgroundColor":"ffcbf2","OutlineColor":"e0aaff"}') 
    },
    ['Ice Blue'] = { 
        18, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"d8f3dc","AccentColor":"52b788","BackgroundColor":"40916c","OutlineColor":"2d6a4f"}') 
    },
    ['Forest Green'] = { 
        19, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"014421","AccentColor":"1f6f44","BackgroundColor":"004b23","OutlineColor":"002f18"}') 
    },
    ['Royal Purple'] = { 
        20, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3b185f","AccentColor":"9d4edd","BackgroundColor":"7b2cbf","OutlineColor":"5a189a"}') 
    },
    ['Amber Sunset'] = { 
        21, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ffba08","AccentColor":"faa307","BackgroundColor":"faa307","OutlineColor":"e85d04"}') 
    },
    ['Midnight'] = { 
        22, 
        httpService:JSONDecode('{"FontColor":"d9d9d9","MainColor":"0b0c10","AccentColor":"45a29e","BackgroundColor":"1f2833","OutlineColor":"c5c6c7"}') 
    },
    ['Skyline'] = { 
        23, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"0f4c75","AccentColor":"3282b8","BackgroundColor":"1b262c","OutlineColor":"bbe1fa"}') 
    },
    ['Galaxy'] = { 
        24, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"0d1b2a","AccentColor":"1b263b","BackgroundColor":"415a77","OutlineColor":"778da9"}') 
    },
    ['Flamingo'] = { 
        25, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ffb6c1","AccentColor":"f08080","BackgroundColor":"fa8072","OutlineColor":"e9967a"}') 
    },
    ['Muted Pink'] = {
        26,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ff8a8a","AccentColor":"ff5a5a","BackgroundColor":"e04848","OutlineColor":"a33636"}')
    },
    ['Slate Gray'] = {
        27,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2c3e50","AccentColor":"34495e","BackgroundColor":"22303f","OutlineColor":"192229"}')
    },
    ['Emerald'] = {
        28,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2ecc71","AccentColor":"27ae60","BackgroundColor":"1e6e43","OutlineColor":"145236"}')
    },
    ['Burnt Orange'] = {
        29,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"e67e22","AccentColor":"d35400","BackgroundColor":"a53d00","OutlineColor":"742700"}')
    },
    ['Muted Violet'] = {
        30,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"8e44ad","AccentColor":"71368a","BackgroundColor":"562766","OutlineColor":"40184b"}')
    },
    ['Frost Blue'] = {
        31,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3498db","AccentColor":"2980b9","BackgroundColor":"1e5c84","OutlineColor":"134065"}')
    },
    ['Deep Sea'] = {
        32,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"34495e","AccentColor":"2c3e50","BackgroundColor":"1f2731","OutlineColor":"11171c"}')
    },
    ['Cyan Dream'] = {
        33,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1abc9c","AccentColor":"16a085","BackgroundColor":"0f5c4c","OutlineColor":"07312a"}')
    },
    ['Sunset Purple'] = {
        34,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"9b59b6","AccentColor":"8e44ad","BackgroundColor":"682e82","OutlineColor":"4d2260"}')
    },
    ['Wine Red'] = {
        35,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"c0392b","AccentColor":"e74c3c","BackgroundColor":"99231b","OutlineColor":"701a14"}')
    },
    ['Pine Green'] = {
        36,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2c6b46","AccentColor":"3e8f5c","BackgroundColor":"20422a","OutlineColor":"122415"}')
    },
    ['Indigo Storm'] = {
        37,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"3c4f76","AccentColor":"273c57","BackgroundColor":"1e283b","OutlineColor":"121a24"}')
    },
    ['Soft Peach'] = {
        38,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"f8b195","AccentColor":"f67280","BackgroundColor":"f06a65","OutlineColor":"cc5c52"}')
    },
    ['Steel Blue'] = {
        39,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"4682b4","AccentColor":"5a9ec8","BackgroundColor":"3c6b96","OutlineColor":"25415e"}')
    },
    ['Muted Gold'] = {
        40,
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"d4af37","AccentColor":"c6a23d","BackgroundColor":"a6852e","OutlineColor":"6b5921"}')
    },
['Mystic Night'] = { 
    41, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1b1b2f","AccentColor":"a85a5a","BackgroundColor":"10101c","OutlineColor":"44475a"}') 
},
['Radiant Sunset'] = { 
    42, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ff5733","AccentColor":"c70039","BackgroundColor":"900c3f","OutlineColor":"581845"}') 
},
['Celestial Sky'] = { 
    43, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"001f3d","AccentColor":"3b8dbd","BackgroundColor":"013e6a","OutlineColor":"1f5e78"}') 
},
['Electric Dream'] = { 
    44, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"8e44ad","AccentColor":"c56ecf","BackgroundColor":"4b2d5e","OutlineColor":"6a3d74"}') 
},
['Lunar Eclipse'] = { 
    45, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1c1c1c","AccentColor":"ff6347","BackgroundColor":"2a2a2a","OutlineColor":"5c5c5c"}') 
},
['Vivid Coral'] = { 
    46, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ff6f61","AccentColor":"ff3f34","BackgroundColor":"d43f3a","OutlineColor":"9f2e1d"}') 
},
['Frozen Blaze'] = { 
    47, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2c3e50","AccentColor":"e74c3c","BackgroundColor":"34495e","OutlineColor":"5f6f7e"}') 
},
['Neon Pulse'] = { 
    48, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"18e1e8","AccentColor":"ff61a6","BackgroundColor":"2b4d53","OutlineColor":"5f8393"}') 
},
['Stealth Mode'] = { 
    49, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"181818","AccentColor":"00d2ff","BackgroundColor":"101010","OutlineColor":"383838"}') 
},
['Deep Purple'] = { 
    50, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"4b0082","AccentColor":"8a2be2","BackgroundColor":"2e0854","OutlineColor":"3c1f59"}') 
},
['Sunset Wave'] = { 
    51, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ff9a8b","AccentColor":"ff7b54","BackgroundColor":"f0c27b","OutlineColor":"f06b4c"}') 
},
['Hacker Mode'] = { 
    52, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"000000","AccentColor":"00ff00","BackgroundColor":"0f0f0f","OutlineColor":"003300"}') 
},
['Pixel Pop'] = { 
    53, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"ff007f","AccentColor":"ff4b00","BackgroundColor":"ff55cc","OutlineColor":"ff005b"}') 
},
['Golden Aura'] = { 
    54, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"f39c12","AccentColor":"e67e22","BackgroundColor":"f1c40f","OutlineColor":"d35400"}') 
},
['Electric Lime'] = { 
    55, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"b0ff00","AccentColor":"80ff00","BackgroundColor":"558000","OutlineColor":"4a8000"}') 
},
['Aqua Breeze'] = { 
    56, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"4a90e2","AccentColor":"00bcd4","BackgroundColor":"007aa7","OutlineColor":"6c8e93"}') 
},
['Zen Garden'] = { 
    57, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"00695c","AccentColor":"004d40","BackgroundColor":"00332e","OutlineColor":"005249"}') 
},
['Mystic Lavender'] = { 
    58, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"8e44ad","AccentColor":"9b59b6","BackgroundColor":"9b59b6","OutlineColor":"7a4d7d"}') 
},
['Steampunk Gold'] = { 
    59, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"d4af37","AccentColor":"e67e22","BackgroundColor":"c27c0e","OutlineColor":"a6781a"}') 
},
['Aurora Green'] = { 
    60, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"2ecc71","AccentColor":"27ae60","BackgroundColor":"1e6e43","OutlineColor":"145236"}') 
},
['Glitch Rush'] = { 
        61, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"121212","AccentColor":"00ffcc","BackgroundColor":"1c1c1c","OutlineColor":"00cc99"}') 
    },
    ['Neon Fury'] = { 
        62, 
       httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1f1f1f","AccentColor":"ff0000","BackgroundColor":"111111","OutlineColor":"ff3333"}') 
    },
    ['Cyberpunk Dream'] = { 
        63, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"0e0e0e","AccentColor":"7f00ff","BackgroundColor":"161616","OutlineColor":"6c00b3"}') 
    },
    ['Dark Web'] = { 
        64, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"0a0a0a","AccentColor":"00ff00","BackgroundColor":"121212","OutlineColor":"007700"}') 
    },
    ['Phantom Blaze'] = { 
        65, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"181818","AccentColor":"e60000","BackgroundColor":"1a1a1a","OutlineColor":"660000"}') 
    },
    ['Electric Pulse'] = { 
        66, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"001f34","AccentColor":"49a1b3","BackgroundColor":"001523","OutlineColor":"00aacc"}') 
    },
    ['Nightshade'] = { 
        67, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"131313","AccentColor":"9900cc","BackgroundColor":"0d0d0d","OutlineColor":"660066"}') 
    },
    ['Vortex'] = { 
        68, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"242424","AccentColor":"ff00ff","BackgroundColor":"1e1e1e","OutlineColor":"50004d"}') 
    },
   ['Electric Ghost'] = { 
    69, 
    httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"494949","AccentColor":"00ebf2","BackgroundColor":"5d5d5d","OutlineColor":"004b4b"}')
    },
    ['Nebula Night'] = { 
        70, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"202020","AccentColor":"7f00ff","BackgroundColor":"1b1b1b","OutlineColor":"291643"}') 
    },
    ['Neon Abyss'] = { 
        71, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"0f0f0f","AccentColor":"ff00cc","BackgroundColor":"101010","OutlineColor":"282828"}') 
    },
    ['Code Red'] = { 
        72, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"1d1d1d","AccentColor":"ff3333","BackgroundColor":"151515","OutlineColor":"560000"}') 
    },
    ['Hyperdrive'] = { 
        73, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"171717","AccentColor":"ff00ff","BackgroundColor":"101010","OutlineColor":"520052"}') 
    },
    ['Dyno'] = { 
        74, 
        httpService:JSONDecode('{"FontColor":"ffffff","MainColor":"181a20","AccentColor":"01e6ce","BackgroundColor":"0e1015","OutlineColor":"3e4654"}')
},

}




	function ThemeManager:ApplyTheme(theme)
		local customThemeData = self:GetCustomTheme(theme)
		local data = customThemeData or self.BuiltInThemes[theme]

		if not data then return end

		-- custom themes are just regular dictionaries instead of an array with { index, dictionary }

		local scheme = data[2]
		for idx, col in next, customThemeData or scheme do
			self.Library[idx] = Color3.fromHex(col)
			
			if Options[idx] then
				Options[idx]:SetValueRGB(Color3.fromHex(col))
			end
		end

		self:ThemeUpdate()
	end

	function ThemeManager:ThemeUpdate()
		-- This allows us to force apply themes without loading the themes tab :)
		local options = { "FontColor", "MainColor", "AccentColor", "BackgroundColor", "OutlineColor" }
		for i, field in next, options do
			if Options and Options[field] then
				self.Library[field] = Options[field].Value
			end
		end

		self.Library.AccentColorDark = self.Library:GetDarkerColor(self.Library.AccentColor);
		self.Library:UpdateColorsUsingRegistry()
	end

	function ThemeManager:LoadDefault()		
		local theme = 'Default'
		local content = isfile(self.Folder .. '/themes/default.txt') and readfile(self.Folder .. '/themes/default.txt')

		local isDefault = true
		if content then
			if self.BuiltInThemes[content] then
				theme = content
			elseif self:GetCustomTheme(content) then
				theme = content
				isDefault = false;
			end
		elseif self.BuiltInThemes[self.DefaultTheme] then
		 	theme = self.DefaultTheme
		end

		if isDefault then
			Options.ThemeManager_ThemeList:SetValue(theme)
		else
			self:ApplyTheme(theme)
		end
	end

	function ThemeManager:SaveDefault(theme)
		writefile(self.Folder .. '/themes/default.txt', theme)
	end

	function ThemeManager:CreateThemeManager(groupbox)
		groupbox:AddLabel('Background color'):AddColorPicker('BackgroundColor', { Default = self.Library.BackgroundColor });
		groupbox:AddLabel('Main color')	:AddColorPicker('MainColor', { Default = self.Library.MainColor });
		groupbox:AddLabel('Accent color'):AddColorPicker('AccentColor', { Default = self.Library.AccentColor });
		groupbox:AddLabel('Outline color'):AddColorPicker('OutlineColor', { Default = self.Library.OutlineColor });
		groupbox:AddLabel('Font color')	:AddColorPicker('FontColor', { Default = self.Library.FontColor });

		local ThemesArray = {}
		for Name, Theme in next, self.BuiltInThemes do
			table.insert(ThemesArray, Name)
		end

		table.sort(ThemesArray, function(a, b) return self.BuiltInThemes[a][1] < self.BuiltInThemes[b][1] end)

		groupbox:AddDivider()
		groupbox:AddDropdown('ThemeManager_ThemeList', { Text = 'Theme list', Values = ThemesArray, Default = 1 })

		groupbox:AddButton('Set as default', function()
			self:SaveDefault(Options.ThemeManager_ThemeList.Value)
			self.Library:Notify(string.format('Set default theme to %q', Options.ThemeManager_ThemeList.Value))
		end)

		Options.ThemeManager_ThemeList:OnChanged(function()
			self:ApplyTheme(Options.ThemeManager_ThemeList.Value)
		end)

		groupbox:AddDivider()
		groupbox:AddInput('ThemeManager_CustomThemeName', { Text = 'Custom theme name' })
		groupbox:AddDropdown('ThemeManager_CustomThemeList', { Text = 'Custom themes', Values = self:ReloadCustomThemes(), AllowNull = true, Default = 1 })
		groupbox:AddDivider()
		
		groupbox:AddButton('Save theme', function() 
			self:SaveCustomTheme(Options.ThemeManager_CustomThemeName.Value)

			Options.ThemeManager_CustomThemeList:SetValues(self:ReloadCustomThemes())
			Options.ThemeManager_CustomThemeList:SetValue(nil)
		end):AddButton('Load theme', function() 
			self:ApplyTheme(Options.ThemeManager_CustomThemeList.Value) 
		end)

		groupbox:AddButton('Refresh list', function()
			Options.ThemeManager_CustomThemeList:SetValues(self:ReloadCustomThemes())
			Options.ThemeManager_CustomThemeList:SetValue(nil)
		end)

		groupbox:AddButton('Set as default', function()
			if Options.ThemeManager_CustomThemeList.Value ~= nil and Options.ThemeManager_CustomThemeList.Value ~= '' then
				self:SaveDefault(Options.ThemeManager_CustomThemeList.Value)
				self.Library:Notify(string.format('Set default theme to %q', Options.ThemeManager_CustomThemeList.Value))
			end
		end)

		ThemeManager:LoadDefault()

		local function UpdateTheme()
			self:ThemeUpdate()
		end

		Options.BackgroundColor:OnChanged(UpdateTheme)
		Options.MainColor:OnChanged(UpdateTheme)
		Options.AccentColor:OnChanged(UpdateTheme)
		Options.OutlineColor:OnChanged(UpdateTheme)
		Options.FontColor:OnChanged(UpdateTheme)
	end

	function ThemeManager:GetCustomTheme(file)
		local path = self.Folder .. '/themes/' .. file
		if not isfile(path) then
			return nil
		end

		local data = readfile(path)
		local success, decoded = pcall(httpService.JSONDecode, httpService, data)
		
		if not success then
			return nil
		end

		return decoded
	end

	function ThemeManager:SaveCustomTheme(file)
		if file:gsub(' ', '') == '' then
			return self.Library:Notify('Invalid file name for theme (empty)', 3)
		end

		local theme = {}
		local fields = { "FontColor", "MainColor", "AccentColor", "BackgroundColor", "OutlineColor" }

		for _, field in next, fields do
			theme[field] = Options[field].Value:ToHex()
		end

		writefile(self.Folder .. '/themes/' .. file .. '.json', httpService:JSONEncode(theme))
	end

	function ThemeManager:ReloadCustomThemes()
		local list = listfiles(self.Folder .. '/themes')

		local out = {}
		for i = 1, #list do
			local file = list[i]
			if file:sub(-5) == '.json' then
				-- i hate this but it has to be done ...

				local pos = file:find('.json', 1, true)
				local char = file:sub(pos, pos)

				while char ~= '/' and char ~= '\\' and char ~= '' do
					pos = pos - 1
					char = file:sub(pos, pos)
				end

				if char == '/' or char == '\\' then
					table.insert(out, file:sub(pos + 1))
				end
			end
		end

		return out
	end

	function ThemeManager:SetLibrary(lib)
		self.Library = lib
	end

	function ThemeManager:BuildFolderTree()
		local paths = {}

		-- build the entire tree if a path is like some-hub/phantom-forces
		-- makefolder builds the entire tree on Synapse X but not other exploits

		local parts = self.Folder:split('/')
		for idx = 1, #parts do
			paths[#paths + 1] = table.concat(parts, '/', 1, idx)
		end

		table.insert(paths, self.Folder .. '/themes')
		table.insert(paths, self.Folder .. '/settings')

		for i = 1, #paths do
			local str = paths[i]
			if not isfolder(str) then
				makefolder(str)
			end
		end
	end

	function ThemeManager:SetFolder(folder)
		self.Folder = folder
		self:BuildFolderTree()
	end

	function ThemeManager:CreateGroupBox(tab)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		return tab:AddLeftGroupbox('Themes')
	end

	function ThemeManager:ApplyToTab(tab)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		local groupbox = self:CreateGroupBox(tab)
		self:CreateThemeManager(groupbox)
	end

	function ThemeManager:ApplyToGroupbox(groupbox)
		assert(self.Library, 'Must set ThemeManager.Library first!')
		self:CreateThemeManager(groupbox)
	end

	ThemeManager:BuildFolderTree()
end

return ThemeManager
